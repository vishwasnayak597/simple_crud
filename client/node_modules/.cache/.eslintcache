[{"/home/qburst/training/mern/client/src/index.js":"1","/home/qburst/training/mern/client/src/App.js":"2","/home/qburst/training/mern/client/src/reportWebVitals.js":"3","/home/qburst/training/mern/client/src/Component/AllUsers.jsx":"4","/home/qburst/training/mern/client/src/Component/NavBar.jsx":"5","/home/qburst/training/mern/client/src/Component/AddUser.jsx":"6","/home/qburst/training/mern/client/src/Component/home.jsx":"7","/home/qburst/training/mern/client/src/Component/NotFound.jsx":"8","/home/qburst/training/mern/client/src/Component/EditUser.jsx":"9","/home/qburst/training/mern/client/src/Service/api.js":"10"},{"size":500,"mtime":1637233755894,"results":"11","hashOfConfig":"12"},{"size":734,"mtime":1637321924598,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1637233755894,"results":"14","hashOfConfig":"12"},{"size":2541,"mtime":1637333022895,"results":"15","hashOfConfig":"12"},{"size":966,"mtime":1637331007519,"results":"16","hashOfConfig":"12"},{"size":2159,"mtime":1637331338499,"results":"17","hashOfConfig":"12"},{"size":487,"mtime":1637477201883,"results":"18","hashOfConfig":"12"},{"size":219,"mtime":1637293168500,"results":"19","hashOfConfig":"12"},{"size":2577,"mtime":1637329988005,"results":"20","hashOfConfig":"12"},{"size":485,"mtime":1637389666747,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"kobafc",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/qburst/training/mern/client/src/index.js",[],["45","46"],"/home/qburst/training/mern/client/src/App.js",[],"/home/qburst/training/mern/client/src/reportWebVitals.js",[],"/home/qburst/training/mern/client/src/Component/AllUsers.jsx",["47"],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles } from '@material-ui/core'\nimport { getUsers, deleteUser } from '../Service/api';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 50px'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#000000',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    }\n})\n\n\nconst AllUsers = () => {\n    const [users, setUsers] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        getAllUsers();\n    }, []);\n\n    const deleteUserData = async (id) => {\n        await deleteUser(id);\n        getAllUsers();\n    }\n\n    const getAllUsers = async () => {\n        let response = await getUsers();\n        console.log(\"ui response\",response)\n        setUsers(response.data);\n    }\n\n    return (\n        <Table className={classes.table}>\n            <TableHead>\n                <TableRow className={classes.thead}>\n                    <TableCell>Id</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Username</TableCell>\n                    <TableCell>Email</TableCell>\n                    <TableCell>Phone</TableCell>\n                    <TableCell></TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {users.map((user) => (\n                    <TableRow className={classes.row} key={user.id}>\n                        <TableCell>{user._id}</TableCell> {/* change it to user.id to use JSON Server */}\n                        <TableCell>{user.name}</TableCell>\n                        <TableCell>{user.username}</TableCell>\n                        <TableCell>{user.email}</TableCell>\n                        <TableCell>{user.phone}</TableCell>\n                        <TableCell>\n                            <Button color=\"primary\" variant=\"contained\" style={{marginRight:10}} component={Link} to={`/edit/${user._id}`}>Edit</Button> {/* change it to user.id to use JSON Server */}\n                            <Button color=\"secondary\" variant=\"contained\" onClick={() => deleteUserData(user._id)}>Delete</Button> {/* change it to user.id to use JSON Server */}\n                        </TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    )\n}\n\nexport default AllUsers;","/home/qburst/training/mern/client/src/Component/NavBar.jsx",[],"/home/qburst/training/mern/client/src/Component/AddUser.jsx",[],"/home/qburst/training/mern/client/src/Component/home.jsx",[],"/home/qburst/training/mern/client/src/Component/NotFound.jsx",[],"/home/qburst/training/mern/client/src/Component/EditUser.jsx",["48","49"],"import { useState, useEffect } from 'react';\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getUsers, editUser } from '../Service/api';\n\nconst initialValue = {\n    name: '',\n    username: '',\n    email: '',\n    phone: ''\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n \nconst EditUser = () => {\n    const [user, setUser] = useState(initialValue);\n    const { name, username, email, phone } = user;\n    const { id } = useParams();\n    const classes = useStyles();\n    let navigate = useNavigate();\n\n    useEffect(() => {\n        loadUserDetails();\n    }, []);\n\n    const loadUserDetails = async() => {\n        const response = await getUsers(id);\n        setUser(response.data);\n    }\n\n    const editUserDetails = async() => {\n        const response = await editUser(id, user);\n        navigate('/all');\n    }\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setUser({...user, [e.target.name]: e.target.value})\n    }\n\n    return (\n        <FormGroup className={classes.container}>\n            <Typography variant=\"h4\">Edit Information</Typography>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Name</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='name' value={name} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Username</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='username' value={username} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Email</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='email' value={email} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Phone</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='phone' value={phone} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => editUserDetails()}>Edit User</Button>\n            </FormControl>\n        </FormGroup>\n    )\n}\n\nexport default EditUser;","/home/qburst/training/mern/client/src/Service/api.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":39,"nodeType":"56","messageId":"57","endLine":2,"endColumn":44},{"ruleId":"58","severity":1,"message":"59","line":32,"column":8,"nodeType":"60","endLine":32,"endColumn":10,"suggestions":"61"},{"ruleId":"54","severity":1,"message":"62","line":40,"column":15,"nodeType":"56","messageId":"57","endLine":40,"endColumn":23},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUserDetails'. Either include it or remove the dependency array.","ArrayExpression",["65"],"'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [loadUserDetails]",{"range":"68","text":"69"},[806,808],"[loadUserDetails]"]